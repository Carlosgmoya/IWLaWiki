{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pedro\\\\Documents\\\\Github\\\\IWLaWiki\\\\frontend\\\\lawiki\\\\src\\\\Ventanas\\\\WikiDetalle.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction WikiDetalle() {\n  _s();\n  const {\n    nombre\n  } = useParams(); // Obtener el nombre de la URL\n  const [wiki, setWiki] = useState(null); // Estado para almacenar los detalles de la wiki\n  const [listaArticulos, setlistaArticulos] = useState([]);\n  const [listaBusqueda, setListaBusqueda] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [debouncedSearchTerm, setDebouncedSearchTerm] = useState(\"\"); // Término con debounce.\n\n  useEffect(() => {\n    // Petición al backend para obtener la wiki por nombre\n    fetch(`http://127.0.0.1:8001/api/v1/wikis/${nombre}`).then(response => response.json()).then(data => setWiki(data)).catch(error => console.error(\"Error al obtener los detalles de la wiki:\", error));\n    fetch(`http://127.0.0.1:8002/api/v1/wikis/${nombre}/articulos`).then(response => response.json()).then(data => {\n      if (Array.isArray(data)) {\n        setlistaArticulos(data); // Almacena la lista completa de articulos\n      } else {\n        console.error(\"Error: La respuesta no es una lista.\");\n      }\n    }).catch(error => console.error(\"Error al obtener la lista de articulos:\", error));\n  }, [nombre]);\n  const fetchWikisDestacadas = async () => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:8001/api/v1/wikis\");\n      const data = await response.json();\n      if (Array.isArray(data)) {\n        setListaWikis(data); // Carga las wikis destacadas.\n      } else {\n        console.error(\"Error: La respuesta no es una lista.\");\n      }\n    } catch (error) {\n      console.error(\"Error al obtener las wikis destacadas:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: wiki ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: wiki.nombre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: wiki.descripcion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          placeholder: \"Buscar Articulos...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), listaArticulos.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: listaArticulos.map((listaArticulos, index) =>\n        /*#__PURE__*/\n        //<li key={index}>{listaArticulos.titulo}</li> // Asumiendo que cada wiki tiene un campo `nombre`\n        _jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `http://localhost:3000/wikis/${nombre}/${listaArticulos.titulo}`,\n            children: listaArticulos.titulo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay articulos disponibles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando detalles de la wiki...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(WikiDetalle, \"o8jB0pM+Tmas8/Ihb3MIHk8FD+0=\", false, function () {\n  return [useParams];\n});\n_c = WikiDetalle;\nexport default WikiDetalle;\nvar _c;\n$RefreshReg$(_c, \"WikiDetalle\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","WikiDetalle","_s","nombre","wiki","setWiki","listaArticulos","setlistaArticulos","listaBusqueda","setListaBusqueda","searchTerm","setSearchTerm","debouncedSearchTerm","setDebouncedSearchTerm","fetch","then","response","json","data","catch","error","console","Array","isArray","fetchWikisDestacadas","setListaWikis","children","fileName","_jsxFileName","lineNumber","columnNumber","descripcion","className","type","value","onChange","e","target","placeholder","length","map","index","href","titulo","_c","$RefreshReg$"],"sources":["C:/Users/Pedro/Documents/Github/IWLaWiki/frontend/lawiki/src/Ventanas/WikiDetalle.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction WikiDetalle() {\r\n  const { nombre } = useParams(); // Obtener el nombre de la URL\r\n  const [wiki, setWiki] = useState(null); // Estado para almacenar los detalles de la wiki\r\n  const [listaArticulos, setlistaArticulos] = useState([]);\r\n  const [listaBusqueda, setListaBusqueda] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [debouncedSearchTerm, setDebouncedSearchTerm] = useState(\"\"); // Término con debounce.\r\n\r\n  useEffect(() => {\r\n    // Petición al backend para obtener la wiki por nombre\r\n    fetch(`http://127.0.0.1:8001/api/v1/wikis/${nombre}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setWiki(data))\r\n      .catch((error) => console.error(\"Error al obtener los detalles de la wiki:\", error));\r\n\r\n\r\n    fetch(`http://127.0.0.1:8002/api/v1/wikis/${nombre}/articulos`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (Array.isArray(data)) {\r\n          setlistaArticulos(data); // Almacena la lista completa de articulos\r\n        } else {\r\n          console.error(\"Error: La respuesta no es una lista.\");\r\n        }\r\n      })\r\n      .catch((error) => console.error(\"Error al obtener la lista de articulos:\", error));\r\n\r\n  }, [nombre]);\r\n\r\n  const fetchWikisDestacadas = async () => {\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:8001/api/v1/wikis\");\r\n      const data = await response.json();\r\n      if (Array.isArray(data)) {\r\n        setListaWikis(data); // Carga las wikis destacadas.\r\n      } else {\r\n        console.error(\"Error: La respuesta no es una lista.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al obtener las wikis destacadas:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {wiki ? (\r\n        <>\r\n          <h1>{wiki.nombre}</h1>\r\n          <p>{wiki.descripcion}</p>\r\n          <div className=\"input\">\r\n            <input\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              placeholder=\"Buscar Articulos...\"\r\n            />\r\n          </div>\r\n\r\n          {listaArticulos.length > 0 ? (\r\n            <ul>\r\n              {listaArticulos.map((listaArticulos, index) => (\r\n                //<li key={index}>{listaArticulos.titulo}</li> // Asumiendo que cada wiki tiene un campo `nombre`\r\n                <li><a href={`http://localhost:3000/wikis/${nombre}/${listaArticulos.titulo}`}>{listaArticulos.titulo}</a></li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p>No hay articulos disponibles</p>\r\n          )}\r\n\r\n        </>\r\n      ) : (\r\n        <p>Cargando detalles de la wiki...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WikiDetalle;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}