{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pedro\\\\Documents\\\\Github\\\\IWLaWiki\\\\frontend\\\\lawiki\\\\src\\\\Ventanas\\\\WikiDetalle.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction WikiDetalle() {\n  _s();\n  const {\n    nombre\n  } = useParams(); // Obtener el nombre de la URL\n  const [wiki, setWiki] = useState(null); // Estado para almacenar los detalles de la wiki\n  const [listaArticulos, setlistaArticulos] = useState([]);\n  useEffect(() => {\n    // Petición al backend para obtener la wiki por nombre\n    fetch(`http://127.0.0.1:8001/api/v1/wikis/${nombre}`).then(response => response.json()).then(data => setWiki(data)).catch(error => console.error(\"Error al obtener los detalles de la wiki:\", error));\n    fetch(`http://127.0.0.1:8002/api/v1/wikis/${nombre}/articulos`).then(response => response.json()).then(data => {\n      if (Array.isArray(data)) {\n        setlistaArticulos(data); // Almacena la lista completa de articulos\n      } else {\n        console.error(\"Error: La respuesta no es una lista.\");\n      }\n    }).catch(error => console.error(\"Error al obtener la lista de articulos:\", error));\n  }, [nombre]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: wiki ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: wiki.nombre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: wiki.descripcion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), listaArticulos.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: listaArticulos.map((listaArticulos, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: listaArticulos.titulo\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this) // Asumiendo que cada wiki tiene un campo `nombre`\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay articulos disponibles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando detalles de la wiki...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(WikiDetalle, \"IdmNEDQiIu9ur5VymENW/i7YKRU=\", false, function () {\n  return [useParams];\n});\n_c = WikiDetalle;\nexport default WikiDetalle;\nvar _c;\n$RefreshReg$(_c, \"WikiDetalle\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","WikiDetalle","_s","nombre","wiki","setWiki","listaArticulos","setlistaArticulos","fetch","then","response","json","data","catch","error","console","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","descripcion","length","map","index","titulo","_c","$RefreshReg$"],"sources":["C:/Users/Pedro/Documents/Github/IWLaWiki/frontend/lawiki/src/Ventanas/WikiDetalle.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction WikiDetalle() {\r\n  const { nombre } = useParams(); // Obtener el nombre de la URL\r\n  const [wiki, setWiki] = useState(null); // Estado para almacenar los detalles de la wiki\r\n  const [listaArticulos, setlistaArticulos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Petición al backend para obtener la wiki por nombre\r\n    fetch(`http://127.0.0.1:8001/api/v1/wikis/${nombre}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setWiki(data))\r\n      .catch((error) => console.error(\"Error al obtener los detalles de la wiki:\", error));\r\n \r\n\r\n    fetch(`http://127.0.0.1:8002/api/v1/wikis/${nombre}/articulos`)\r\n    .then((response) => response.json())\r\n          .then((data) => {\r\n            if (Array.isArray(data)) {\r\n              setlistaArticulos(data); // Almacena la lista completa de articulos\r\n            } else {\r\n              console.error(\"Error: La respuesta no es una lista.\");\r\n            }\r\n          })\r\n          .catch((error) => console.error(\"Error al obtener la lista de articulos:\", error));\r\n\r\n  }, [nombre]);\r\n\r\n  return (\r\n    <div>\r\n      {wiki ? (\r\n        <>\r\n          <h1>{wiki.nombre}</h1>\r\n          <p>{wiki.descripcion}</p>\r\n          {listaArticulos.length > 0 ? (\r\n            <ul>\r\n                {listaArticulos.map((listaArticulos, index) => (\r\n                <li key={index}>{listaArticulos.titulo}</li> // Asumiendo que cada wiki tiene un campo `nombre`\r\n                ))}\r\n            </ul>\r\n        ) : (\r\n        <p>No hay articulos disponibles</p>\r\n      )}\r\n          \r\n        </>\r\n      ) : (\r\n        <p>Cargando detalles de la wiki...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WikiDetalle;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}