{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pedro\\\\Documents\\\\Github\\\\IWLaWiki\\\\frontend\\\\lawiki\\\\src\\\\Ventanas\\\\PantallaInicio.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport './PantallaInicio.css';\nimport ResultadosBusqueda from '../Componentes/ResultadosBusqueda';\nimport InicioDestacados from '../Componentes/InicioDestacados';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PantallaInicio() {\n  _s();\n  const [listaWikis, setListaWikis] = useState([]);\n  const [listaBusqueda, setListaBusqueda] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [debouncedSearchTerm, setDebouncedSearchTerm] = useState(\"\"); // Término con debounce.\n\n  // Petición fetch inicial\n  useEffect(() => {\n    fetchWikisDestacadas();\n  }, []);\n  useEffect(() => {\n    // Configura un debounce: espera 300ms antes de actualizar el término de búsqueda.\n    const handler = setTimeout(() => {\n      setDebouncedSearchTerm(searchTerm);\n    }, 300);\n    return () => {\n      clearTimeout(handler); // Limpia el temporizador si el usuario sigue escribiendo.\n    };\n  }, [searchTerm]);\n  useEffect(() => {\n    if (debouncedSearchTerm.trim()) {\n      fetchBusqueda(debouncedSearchTerm);\n    } else {\n      setListaBusqueda([]); // Limpia los resultados si no hay término de búsqueda.\n    }\n  }, [debouncedSearchTerm]);\n  const fetchWikisDestacadas = async () => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:8001/api/v1/wikis\");\n      const data = await response.json();\n      if (Array.isArray(data)) {\n        setListaWikis(data); // Carga las wikis destacadas.\n      } else {\n        console.error(\"Error: La respuesta no es una lista.\");\n      }\n    } catch (error) {\n      console.error(\"Error al obtener las wikis destacadas:\", error);\n    }\n  };\n  const fetchBusqueda = async term => {\n    try {\n      const response = await fetch(`http://127.0.0.1:8001/api/v1/wikis?term=${term}`);\n      const data = await response.json();\n      if (Array.isArray(data)) {\n        setListaBusqueda(data); // Actualiza los resultados de búsqueda.\n      } else {\n        console.error(\"Error: La respuesta no es una lista.\");\n      }\n    } catch (error) {\n      console.error(\"Error al buscar wikis:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Titulo\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"La Wiki:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        placeholder: \"Buscar wikis...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), searchTerm != \"\" ? /*#__PURE__*/_jsxDEV(ResultadosBusqueda, {\n      listaBusqueda: listaBusqueda\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(InicioDestacados, {\n      listaWikis: listaWikis,\n      nomb: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(PantallaInicio, \"ieuuQ/bf/gxbc36lZtjq5t8e+UU=\");\n_c = PantallaInicio;\nexport default PantallaInicio;\nvar _c;\n$RefreshReg$(_c, \"PantallaInicio\");","map":{"version":3,"names":["React","useEffect","useState","ResultadosBusqueda","InicioDestacados","jsxDEV","_jsxDEV","Fragment","_Fragment","PantallaInicio","_s","listaWikis","setListaWikis","listaBusqueda","setListaBusqueda","searchTerm","setSearchTerm","debouncedSearchTerm","setDebouncedSearchTerm","fetchWikisDestacadas","handler","setTimeout","clearTimeout","trim","fetchBusqueda","response","fetch","data","json","Array","isArray","console","error","term","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","nomb","_c","$RefreshReg$"],"sources":["C:/Users/Pedro/Documents/Github/IWLaWiki/frontend/lawiki/src/Ventanas/PantallaInicio.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport './PantallaInicio.css';\r\nimport ResultadosBusqueda from '../Componentes/ResultadosBusqueda';\r\nimport InicioDestacados from '../Componentes/InicioDestacados';\r\n\r\nfunction PantallaInicio() {\r\n  const [listaWikis, setListaWikis] = useState([]);\r\n  const [listaBusqueda, setListaBusqueda] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [debouncedSearchTerm, setDebouncedSearchTerm] = useState(\"\"); // Término con debounce.\r\n\r\n  // Petición fetch inicial\r\n  useEffect(() => {\r\n    fetchWikisDestacadas();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Configura un debounce: espera 300ms antes de actualizar el término de búsqueda.\r\n    const handler = setTimeout(() => {\r\n      setDebouncedSearchTerm(searchTerm);\r\n    }, 300);\r\n\r\n    return () => {\r\n      clearTimeout(handler); // Limpia el temporizador si el usuario sigue escribiendo.\r\n    };\r\n  }, [searchTerm]);\r\n\r\n  useEffect(() => {\r\n    if (debouncedSearchTerm.trim()) {\r\n      fetchBusqueda(debouncedSearchTerm);\r\n    } else {\r\n      setListaBusqueda([]); // Limpia los resultados si no hay término de búsqueda.\r\n    }\r\n  }, [debouncedSearchTerm]);\r\n\r\n  const fetchWikisDestacadas = async () => {\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:8001/api/v1/wikis\");\r\n      const data = await response.json();\r\n      if (Array.isArray(data)) {\r\n        setListaWikis(data); // Carga las wikis destacadas.\r\n      } else {\r\n        console.error(\"Error: La respuesta no es una lista.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al obtener las wikis destacadas:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchBusqueda = async (term) => {\r\n    try {\r\n      const response = await fetch(`http://127.0.0.1:8001/api/v1/wikis?term=${term}`);\r\n      const data = await response.json();\r\n      if (Array.isArray(data)) {\r\n        setListaBusqueda(data); // Actualiza los resultados de búsqueda.\r\n      } else {\r\n        console.error(\"Error: La respuesta no es una lista.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al buscar wikis:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Titulo\">\r\n        <h1>La Wiki:</h1>\r\n      </div>\r\n\r\n      <div className=\"input\">\r\n        <input\r\n          type=\"text\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          placeholder=\"Buscar wikis...\"\r\n        />\r\n      </div>\r\n\r\n      {searchTerm != \"\" ? (\r\n        <ResultadosBusqueda listaBusqueda={listaBusqueda} />\r\n      ) : (\r\n        <InicioDestacados listaWikis={listaWikis} nomb />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PantallaInicio;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}